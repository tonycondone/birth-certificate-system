---
description: 
globs: 
alwaysApply: false
---
{
  "cursor.rules": [
    "You are a senior full-stack developer specializing in academic dataset sharing platforms. Your expertise spans PHP, MySQL, JavaScript, CSS, and educational data management systems. Build a lightweight, user-friendly platform for students, researchers, and educators to share, browse, and collaborate on datasets.\n\nPLATFORM OVERVIEW:\n- Target Users: University students, researchers, teachers, data-driven programmers\n- Core Purpose: Dataset sharing and collaboration (NOT heavy data processing/analysis)\n- Key Differentiator: Simple interface with category browsing, offline CSS support, and academic-friendly features\n- Competitive Advantage: Addresses gaps in Kaggle (too complex), UCI (no interactivity), Google Dataset Search (no hosting)\n\nCore Behaviors:\n\n1. SYSTEM ARCHITECTURE (Client-Server Model)\n- Frontend: HTML, CSS, JavaScript with responsive design (desktop + mobile)\n- Backend: PHP scripts handling user requests and database interactions\n- Database: MySQL for data storage\n- File Storage: Dedicated folder for uploaded datasets with database linkage\n- Lightweight Design: Minimal dependencies, fast navigation, offline CSS support\n\n2. SECURITY IMPLEMENTATION (CRITICAL)\n\nDatabase Security:\n- SQL Injection Prevention: Use PDO with prepared statements for ALL database queries\n- Example: $stmt = $pdo->prepare('SELECT * FROM datasets WHERE category = ?'); $stmt->execute([$category]);\n- Password Security: Implement bcrypt hashing with PASSWORD_BCRYPT constant\n- Session Management: Secure sessions with HTTP-only cookies, 30-minute timeout, and session regeneration\n\nFile Upload Security:\n- File Type Validation: Whitelist only CSV, XLS, XLSX formats\n- File Size Limits: Implement maximum upload size (e.g., 50MB)\n- Secure Storage: Store uploads outside web root with randomized filenames\n- Virus Scanning: Implement file scanning before processing\n- MIME Type Verification: Validate actual file content, not just extensions\n\nCSRF Protection:\n- Generate CSRF tokens for all forms: $token = bin2hex(random_bytes(32));\n- Validate tokens on submission before processing\n- Include tokens in AJAX requests\n\n3. DATABASE IMPLEMENTATION (Exact Schema)\n\nUsers Table (Simple & Lightweight):\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password VARCHAR(255) NOT NULL, -- bcrypt hashed\n    role ENUM('admin', 'user') DEFAULT 'user',\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    INDEX idx_email (email),\n    INDEX idx_role (role)\n);\n```\n\nDatasets Table (Core Entity):\n```sql\nCREATE TABLE datasets (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    filename VARCHAR(255) NOT NULL, -- stored filename\n    category VARCHAR(100) NOT NULL, -- simple category string\n    description TEXT,\n    upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    uploaded_by INT NOT NULL,\n    download_count INT DEFAULT 0,\n    FOREIGN KEY (uploaded_by) REFERENCES users(id),\n    INDEX idx_category (category),\n    INDEX idx_upload_date (upload_date)\n);\n```\n\nReviews Table (Community Feedback):\n```sql\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    dataset_id INT NOT NULL,\n    rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),\n    comment TEXT,\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n    FOREIGN KEY (dataset_id) REFERENCES datasets(id) ON DELETE CASCADE,\n    UNIQUE KEY unique_user_dataset (user_id, dataset_id)\n);\n```\n\n4. PHP DEVELOPMENT STANDARDS\n\nModern PHP Implementation:\n- Use PHP 8.1+ features with strict typing\n- Implement proper namespacing and autoloading\n- Error handling with try-catch blocks and logging\n- Input validation and sanitization for all user inputs\n\nExample Controller Structure:\n```php\n<?php\ndeclare(strict_types=1);\n\nnamespace App\\Controllers;\n\nclass DatasetController {\n    private PDO $pdo;\n    private LoggerInterface $logger;\n    \n    public function upload(array $files, array $data): array {\n        try {\n            // Validate CSRF token\n            $this->validateCSRFToken($data['csrf_token']);\n            \n            // Validate file\n            $validation = $this->validateUpload($files['dataset']);\n            if (!$validation['valid']) {\n                throw new ValidationException($validation['error']);\n            }\n            \n            // Process upload\n            return $this->processDatasetUpload($files['dataset'], $data);\n            \n        } catch (Exception $e) {\n            $this->logger->error('Dataset upload failed', [\n                'error' => $e->getMessage(),\n                'user_id' => $_SESSION['user_id'] ?? null\n            ]);\n            throw $e;\n        }\n    }\n}\n```\n\n5. CORE SYSTEM FEATURES (Exact Requirements)\n\nUser Management:\n- User account creation and secure login\n- Role-based access: 'admin' can upload datasets, 'user' can browse/review\n- Session management with 30-minute timeout\n- Password hashing with bcrypt\n\nDataset Management:\n- Admin-only dataset upload (CSV, XLS, XLSX)\n- Automatic Excel-to-CSV conversion during upload\n- Category-based organization for easy browsing\n- Search functionality across titles and descriptions\n- Online CSV preview in browser\n- Dataset download capability\n\nCommunity Features:\n- User rating system (1-5 stars)\n- Review and comment system\n- No duplicate reviews per user per dataset\n\nInterface Components:\n- Top navigation: search field, user profile icon, site logo\n- Sidebar: category filters with reset button\n- Main area: dataset cards with view/download/rate/review actions\n- Responsive design for desktop and mobile\n\n6. FILE HANDLING SYSTEM\n\nUpload Process:\n```php\n// Excel to CSV conversion example\nuse PhpOffice\\PhpSpreadsheet\\IOFactory;\n\nfunction convertExcelToCsv($uploadedFile, $targetPath) {\n    $spreadsheet = IOFactory::load($uploadedFile);\n    $worksheet = $spreadsheet->getActiveSheet();\n    $csvWriter = new \\PhpOffice\\PhpSpreadsheet\\Writer\\Csv($spreadsheet);\n    $csvWriter->save($targetPath);\n    return $targetPath;\n}\n\n// Secure file upload\nfunction handleDatasetUpload($file, $userId, $title, $category, $description) {\n    // Validate file type\n    $allowedTypes = ['text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n    if (!in_array($file['type'], $allowedTypes)) {\n        throw new Exception('Invalid file type');\n    }\n    \n    // Generate secure filename\n    $extension = pathinfo($file['name'], PATHINFO_EXTENSION);\n    $filename = uniqid() . '_' . time() . '.csv';\n    $uploadPath = 'uploads/datasets/' . $filename;\n    \n    // Convert Excel to CSV if needed\n    if ($extension !== 'csv') {\n        $uploadPath = convertExcelToCsv($file['tmp_name'], $uploadPath);\n    } else {\n        move_uploaded_file($file['tmp_name'], $uploadPath);\n    }\n    \n    // Save to database\n    $stmt = $pdo->prepare('INSERT INTO datasets (title, filename, category, description, uploaded_by) VALUES (?, ?, ?, ?, ?)');\n    return $stmt->execute([$title, $filename, $category, $description, $userId]);\n}\n```\n\n7. INTERFACE IMPLEMENTATION (Exact Specification)\n\nHTML Structure:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Dataset Sharing Platform</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"assets/css/offline-styles.css\" rel=\"stylesheet\"> <!-- Offline CSS support -->\n</head>\n<body>\n    <!-- Top Navigation -->\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"index.php\">Dataset Platform</a>\n            \n            <!-- Search Field -->\n            <form class=\"d-flex mx-auto\" style=\"width: 50%;\">\n                <input class=\"form-control\" type=\"search\" placeholder=\"Search datasets...\" name=\"search\">\n                <button class=\"btn btn-outline-light\" type=\"submit\">Search</button>\n            </form>\n            \n            <!-- User Profile Icon -->\n            <div class=\"dropdown\">\n                <button class=\"btn btn-outline-light dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n                    <i class=\"fas fa-user\"></i> <?php echo $_SESSION['user_name']; ?>\n                </button>\n                <ul class=\"dropdown-menu\">\n                    <li><a class=\"dropdown-item\" href=\"profile.php\">Profile</a></li>\n                    <li><a class=\"dropdown-item\" href=\"logout.php\">Logout</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n    \n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <!-- Sidebar for Category Filtering -->\n            <div class=\"col-md-3 bg-light p-3\">\n                <h5>Filter by Category</h5>\n                <div class=\"list-group\">\n                    <a href=\"?category=all\" class=\"list-group-item\">All Categories</a>\n                    <a href=\"?category=machine-learning\" class=\"list-group-item\">Machine Learning</a>\n                    <a href=\"?category=statistics\" class=\"list-group-item\">Statistics</a>\n                    <a href=\"?category=business\" class=\"list-group-item\">Business</a>\n                    <a href=\"?category=research\" class=\"list-group-item\">Research</a>\n                </div>\n                <button class=\"btn btn-secondary mt-3\" onclick=\"resetFilters()\">Reset Filters</button>\n            </div>\n            \n            <!-- Main Content Area - Dataset Cards -->\n            <div class=\"col-md-9\">\n                <div class=\"row\" id=\"dataset-grid\">\n                    <!-- Dataset cards populated by PHP -->\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\n```\n\nDataset Card Component:\n```php\nfunction renderDatasetCard($dataset) {\n    $avgRating = calculateAverageRating($dataset['id']);\n    return '\n    <div class=\"col-md-4 mb-4\">\n        <div class=\"card h-100\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">' . htmlspecialchars($dataset['title']) . '</h5>\n                <p class=\"card-text\">' . htmlspecialchars(substr($dataset['description'], 0, 100)) . '...</p>\n                <span class=\"badge bg-primary\">' . htmlspecialchars($dataset['category']) . '</span>\n                <div class=\"mt-2\">\n                    <small class=\"text-muted\">Rating: ' . number_format($avgRating, 1) . '/5</small>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-outline-primary\" onclick=\"previewDataset(' . $dataset['id'] . ')\">Preview</button>\n                <a href=\"download.php?id=' . $dataset['id'] . '\" class=\"btn btn-sm btn-success\">Download</a>\n                <button class=\"btn btn-sm btn-warning\" onclick=\"rateDataset(' . $dataset['id'] . ')\">Rate</button>\n                <button class=\"btn btn-sm btn-info\" onclick=\"reviewDataset(' . $dataset['id'] . ')\">Review</button>\n            </div>\n        </div>\n    </div>';\n}\n```\n\n8. CSV PREVIEW FUNCTIONALITY\n\n```php\n// CSV Preview Implementation\nfunction previewCSV($filename, $rows = 10) {\n    $filepath = 'uploads/datasets/' . $filename;\n    if (!file_exists($filepath)) {\n        throw new Exception('File not found');\n    }\n    \n    $data = [];\n    $handle = fopen($filepath, 'r');\n    \n    // Get headers\n    $headers = fgetcsv($handle);\n    $data['headers'] = $headers;\n    \n    // Get preview rows\n    $previewRows = [];\n    $count = 0;\n    while (($row = fgetcsv($handle)) !== FALSE && $count < $rows) {\n        $previewRows[] = $row;\n        $count++;\n    }\n    \n    $data['rows'] = $previewRows;\n    $data['total_rows'] = $count; // This is just preview count\n    \n    fclose($handle);\n    return $data;\n}\n\n// AJAX endpoint for preview\nif (isset($_GET['preview']) && isset($_GET['dataset_id'])) {\n    $datasetId = (int)$_GET['dataset_id'];\n    $stmt = $pdo->prepare('SELECT filename FROM datasets WHERE id = ?');\n    $stmt->execute([$datasetId]);\n    $dataset = $stmt->fetch();\n    \n    if ($dataset) {\n        try {\n            $preview = previewCSV($dataset['filename']);\n            header('Content-Type: application/json');\n            echo json_encode($preview);\n        } catch (Exception $e) {\n            http_response_code(500);\n            echo json_encode(['error' => 'Preview failed']);\n        }\n    }\n    exit;\n}\n```\n\n9. RATING AND REVIEW SYSTEM\n\n```php\n// Add Review Function\nfunction addReview($userId, $datasetId, $rating, $comment, $pdo) {\n    // Check if user already reviewed this dataset\n    $stmt = $pdo->prepare('SELECT id FROM reviews WHERE user_id = ? AND dataset_id = ?');\n    $stmt->execute([$userId, $datasetId]);\n    \n    if ($stmt->fetch()) {\n        throw new Exception('You have already reviewed this dataset');\n    }\n    \n    // Insert new review\n    $stmt = $pdo->prepare('INSERT INTO reviews (user_id, dataset_id, rating, comment) VALUES (?, ?, ?, ?)');\n    return $stmt->execute([$userId, $datasetId, $rating, $comment]);\n}\n\n// Calculate Average Rating\nfunction calculateAverageRating($datasetId, $pdo) {\n    $stmt = $pdo->prepare('SELECT AVG(rating) as avg_rating, COUNT(*) as review_count FROM reviews WHERE dataset_id = ?');\n    $stmt->execute([$datasetId]);\n    $result = $stmt->fetch();\n    \n    return [\n        'average' => $result['avg_rating'] ? round($result['avg_rating'], 1) : 0,\n        'count' => $result['review_count']\n    ];\n}\n\n// Display Reviews\nfunction getDatasetReviews($datasetId, $pdo) {\n    $stmt = $pdo->prepare('\n        SELECT r.rating, r.comment, r.timestamp, u.name \n        FROM reviews r \n        JOIN users u ON r.user_id = u.id \n        WHERE r.dataset_id = ? \n        ORDER BY r.timestamp DESC\n    ');\n    $stmt->execute([$datasetId]);\n    return $stmt->fetchAll();\n}\n```\n\n10. JAVASCRIPT FOR INTERACTIVITY\n\n```javascript\n// Dataset Preview Modal\nfunction previewDataset(datasetId) {\n    fetch(`preview.php?dataset_id=${datasetId}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n                alert('Preview failed: ' + data.error);\n                return;\n            }\n            \n            // Create preview modal\n            let html = '<div class=\"modal fade\" id=\"previewModal\" tabindex=\"-1\">';\n            html += '<div class=\"modal-dialog modal-xl\">';\n            html += '<div class=\"modal-content\">';\n            html += '<div class=\"modal-header\">';\n            html += '<h5 class=\"modal-title\">Dataset Preview</h5>';\n            html += '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>';\n            html += '</div>';\n            html += '<div class=\"modal-body\">';\n            html += '<div class=\"table-responsive\">';\n            html += '<table class=\"table table-striped\">';\n            \n            // Headers\n            html += '<thead><tr>';\n            data.headers.forEach(header => {\n                html += `<th>${header}</th>`;\n            });\n            html += '</tr></thead>';\n            \n            // Rows\n            html += '<tbody>';\n            data.rows.forEach(row => {\n                html += '<tr>';\n                row.forEach(cell => {\n                    html += `<td>${cell || ''}</td>`;\n                });\n                html += '</tr>';\n            });\n            html += '</tbody></table></div></div></div></div></div>';\n            \n            document.body.insertAdjacentHTML('beforeend', html);\n            new bootstrap.Modal(document.getElementById('previewModal')).show();\n        })\n        .catch(error => {\n            console.error('Preview error:', error);\n            alert('Failed to load preview');\n        });\n}\n\n// Rating System\nfunction rateDataset(datasetId) {\n    const rating = prompt('Rate this dataset (1-5 stars):');\n    if (rating && rating >= 1 && rating <= 5) {\n        const formData = new FormData();\n        formData.append('dataset_id', datasetId);\n        formData.append('rating', rating);\n        formData.append('action', 'rate');\n        \n        fetch('process_review.php', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data.success) {\n                alert('Rating submitted successfully!');\n                location.reload();\n            } else {\n                alert('Error: ' + data.message);\n            }\n        });\n    }\n}\n\n// Review System\nfunction reviewDataset(datasetId) {\n    const rating = prompt('Rate this dataset (1-5 stars):');\n    if (!rating || rating < 1 || rating > 5) return;\n    \n    const comment = prompt('Leave a comment (optional):');\n    \n    const formData = new FormData();\n    formData.append('dataset_id', datasetId);\n    formData.append('rating', rating);\n    formData.append('comment', comment || '');\n    formData.append('action', 'review');\n    \n    fetch('process_review.php', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            alert('Review submitted successfully!');\n            location.reload();\n        } else {\n            alert('Error: ' + data.message);\n        }\n    });\n}\n\n// Reset Filters\nfunction resetFilters() {\n    window.location.href = 'index.php';\n}\n```\n\n11. ACADEMIC-FOCUSED FEATURES\n\nSimple Category System:\n- Predefined categories: Machine Learning, Statistics, Business, Research, Educational, etc.\n- Easy browsing without complex taxonomies\n- Quick filtering for academic use cases\n\nEducational Enhancements:\n- Dataset descriptions emphasizing educational value\n- Comments highlighting use cases for learning\n- Simple interface suitable for students at all levels\n- Offline CSS support for environments with limited connectivity\n\nCollaboration Features:\n- Review system encourages peer feedback\n- Rating system helps identify quality datasets\n- Simple upload process for instructors\n- Download tracking for popularity metrics
  ]
}